apiVersion: v1
kind: Service
metadata:
  name: drupal-service
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30095
  selector:
    app: drupal
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drupal
  labels:
    app: drupal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drupal
  template:
    metadata:
      name: drupal
      labels:
        app: drupal
    spec:
      containers:
        - name: drupal
          image: drupal:8.6
          ports:
            - containerPort: 80
              name: drupal
          volumeMounts:
            - mountPath: "/var/www/html/modules"
              name: vol-drupal
              subPath: modules
            - mountPath:  "/var/www/html/profiles"
              name: vol-drupal
              subPath: profiles
            - mountPath:  "/var/www/html/sites"
              name: vol-drupal
              subPath: sites
            - mountPath: "/var/www/html/themes"
              name: vol-drupal
              subPath: themes
      initContainers:
        - name: init-sites-volume
          image: drupal:8.6
          volumeMounts:
            - mountPath: "/data"
              name: vol-drupal
#              subPath: data
          command: ['/bin/bash', '-c']
          args: ['cp -r /var/www/html/sites/ /data/; chown www-data:www-data /data/ -R']
      volumes:
        - name: vol-drupal
          persistentVolumeClaim:
            claimName: drupal-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: drupal-pv
spec:
  claimRef:
    name: drupal-pvc
    namespace: default
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/drupal-data"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
